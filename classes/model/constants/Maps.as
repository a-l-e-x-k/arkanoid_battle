/**
 * Author: Alexey
 * Date: 12/5/12
 * Time: 12:57 AM
 */
package model.constants
{
	public class Maps
	{
		private static var _presets:Array;
        private static var _stars:Vector.<MapStarsVO>;
		public static var count:int;

		public static function init():void
		{
			_presets = [];
            _stars = new Vector.<MapStarsVO>();

            //#0 smiley face
            registerMap(new MapStarsVO(100000, 180000, 111000), "3,4,2|4,4,2|5,4,2|2,5,2|3,5,2|4,5,2|5,5,2|6,5,2|2,6,2|3,6,11|4,6,2|5,6,11|6,6,2|2,7,2|3,7,2|4,7,2|5,7,2|6,7,2|2,8,2|3,8,2|4,8,3|5,8,2|6,8,2|3,9,2|4,9,2|5,9,2");

            //#1 rectangular white-blue thingy
            registerMap(new MapStarsVO(80000, 110000, 145000), "2,1,7|3,1,4|4,1,7|5,1,4|6,1,7|2,2,4|6,2,4|2,3,7|4,3,11|6,3,7|2,4,4|6,4,4|2,5,7|3,5,4|4,5,7|5,5,4|6,5,7");

            //#2 pink-purple rhomb
            registerMap(new MapStarsVO(80000, 110000, 145000), "4,1,5|3,2,6|4,2,11|5,2,6|2,3,5|3,3,11|4,3,5|5,3,11|6,3,5|3,4,6|4,4,11|5,4,6|4,5,5");

            //#3 eyes & nose
            registerMap(new MapStarsVO(80000, 110000, 145000), "2,3,7|6,3,7|1,4,7|2,4,11|3,4,7|5,4,7|6,4,11|7,4,7|2,5,7|6,5,7|3,7,0|4,7,0|5,7,0");

            //#4 hi
            registerMap(new MapStarsVO(40000, 60000, 90000), "2,3,1|4,3,1|6,3,11|2,4,1|4,4,1|2,5,1|3,5,1|4,5,1|6,5,2|2,6,1|4,6,1|6,6,2|2,7,1|4,7,1|6,7,2");

            //#5 mad black-orange-yellow thingy
            registerMap(new MapStarsVO(145000, 100000, 120000), "2,3,11|3,3,0|5,3,0|6,3,11|3,4,11|4,4,0|5,4,11|4,5,11|4,6,11|3,7,11|4,7,0|5,7,11|2,8,11|3,8,0|5,8,0|6,8,11|0,12,8|2,12,8|4,12,8|6,12,8|8,12,8|1,13,7|3,13,7|5,13,7|7,13,7|0,14,8|2,14,8|4,14,8|6,14,8|8,14,8");

            //3 white-blue cicle things
            registerMap(new MapStarsVO(80000, 110000, 145000), "4,1,7|3,2,7|5,2,7|2,3,7|4,3,4|6,3,7|2,4,7|3,4,4|4,4,7|5,4,4|6,4,7|2,5,7|4,5,4|6,5,7|3,6,7|5,6,7|4,7,7|1,8,7|7,8,7|0,9,7|1,9,4|2,9,7|6,9,7|7,9,4|8,9,7|1,10,7|7,10,7");

            //robot-like thingy with arms
            registerMap(new MapStarsVO(80000, 110000, 145000), "0,2,6|3,2,6|4,2,11|5,2,6|8,2,6|0,3,11|1,3,6|2,3,6|3,3,6|4,3,6|5,3,6|6,3,6|7,3,6|8,3,11|0,4,6|3,4,6|4,4,11|5,4,6|8,4,6|2,6,6|3,6,5|4,6,6|5,6,5|6,6,6|2,7,5|4,7,11|6,7,5|2,8,6|3,8,11|4,8,11|5,8,11|6,8,6|2,9,5|4,9,11|6,9,5|2,10,6|3,10,5|4,10,6|5,10,5|6,10,6");

            //flower
            registerMap(new MapStarsVO(80000, 110000, 145000), "4,1,2|2,2,2|3,2,2|4,2,2|5,2,2|6,2,2|2,3,2|4,3,2|6,3,2|1,4,2|4,4,11|7,4,2|1,5,2|2,5,2|3,5,11|4,5,11|5,5,11|6,5,2|7,5,2|1,6,2|4,6,11|7,6,2|1,7,2|4,7,2|7,7,2|2,8,2|4,8,2|6,8,2|3,9,2|4,9,1|5,9,2|4,10,1|7,10,1|4,11,1|6,11,1|7,11,1|4,12,1|5,12,1|6,12,1|4,13,1|5,13,1|6,13,1|4,14,1|5,14,1|4,15,1|4,16,1|4,17,1|4,18,1|4,19,1");

            //finland flag
            registerMap(new MapStarsVO(80000, 110000, 145000), "0,0,11|1,0,11|2,0,11|3,0,11|4,0,11|5,0,11|6,0,11|7,0,11|8,0,11|1,3,7|2,3,7|3,3,4|4,3,7|5,3,7|6,3,7|7,3,7|1,4,7|2,4,7|3,4,4|4,4,7|5,4,7|6,4,7|7,4,7|1,5,4|2,5,4|3,5,4|4,5,4|5,5,4|6,5,4|7,5,4|1,6,4|2,6,4|3,6,4|4,6,4|5,6,4|6,6,4|7,6,4|1,7,7|2,7,7|3,7,4|4,7,7|5,7,7|6,7,7|7,7,7|1,8,7|2,8,7|3,8,4|4,8,7|5,8,7|6,8,7|7,8,7|1,9,7|2,9,7|3,9,4|4,9,7|5,9,7|6,9,7|7,9,7");

            //russia flag
            registerMap(new MapStarsVO(80000, 110000, 145000), "0,0,11|1,0,11|2,0,11|3,0,11|4,0,11|5,0,11|6,0,11|7,0,11|8,0,11|1,3,7|2,3,7|3,3,7|4,3,7|5,3,7|6,3,7|7,3,7|1,4,7|2,4,7|3,4,7|4,4,7|5,4,7|6,4,7|7,4,7|1,5,4|2,5,4|3,5,4|4,5,4|5,5,4|6,5,4|7,5,4|1,6,4|2,6,4|3,6,4|4,6,4|5,6,4|6,6,4|7,6,4|1,7,3|2,7,3|3,7,3|4,7,3|5,7,3|6,7,3|7,7,3|1,8,3|2,8,3|3,8,3|4,8,3|5,8,3|6,8,3|7,8,3");

            //england flag
            registerMap(new MapStarsVO(80000, 110000, 145000), "0,0,11|1,0,11|2,0,11|3,0,11|4,0,11|5,0,11|6,0,11|7,0,11|8,0,11|1,3,7|2,3,7|3,3,7|4,3,3|5,3,7|6,3,7|7,3,7|1,4,7|2,4,7|3,4,7|4,4,3|5,4,7|6,4,7|7,4,7|1,5,7|2,5,7|3,5,7|4,5,3|5,5,7|6,5,7|7,5,7|1,6,3|2,6,3|3,6,3|4,6,3|5,6,3|6,6,3|7,6,3|1,7,7|2,7,7|3,7,7|4,7,3|5,7,7|6,7,7|7,7,7|1,8,7|2,8,7|3,8,7|4,8,3|5,8,7|6,8,7|7,8,7|1,9,7|2,9,7|3,9,7|4,9,3|5,9,7|6,9,7|7,9,7");

            //estonia flag
            registerMap(new MapStarsVO(80000, 110000, 145000), "0,0,11|1,0,11|2,0,11|3,0,11|4,0,11|5,0,11|6,0,11|7,0,11|8,0,11|1,3,4|2,3,4|3,3,4|4,3,4|5,3,4|6,3,4|7,3,4|1,4,4|2,4,4|3,4,4|4,4,4|5,4,4|6,4,4|7,4,4|1,5,8|2,5,8|3,5,8|4,5,8|5,5,8|6,5,8|7,5,8|1,6,8|2,6,8|3,6,8|4,6,8|5,6,8|6,6,8|7,6,8|1,7,7|2,7,7|3,7,7|4,7,7|5,7,7|6,7,7|7,7,7|1,8,7|2,8,7|3,8,7|4,8,7|5,8,7|6,8,7|7,8,7");

            //germany flag
            registerMap(new MapStarsVO(80000, 110000, 145000), "0,0,11|1,0,11|2,0,11|3,0,11|4,0,11|5,0,11|6,0,11|7,0,11|8,0,11|1,3,8|2,3,8|3,3,8|4,3,8|5,3,8|6,3,8|7,3,8|1,4,8|2,4,8|3,4,8|4,4,8|5,4,8|6,4,8|7,4,8|1,5,3|2,5,3|3,5,3|4,5,3|5,5,3|6,5,3|7,5,3|1,6,3|2,6,3|3,6,3|4,6,3|5,6,3|6,6,3|7,6,3|1,7,2|2,7,2|3,7,2|4,7,2|5,7,2|6,7,2|7,7,2|1,8,2|2,8,2|3,8,2|4,8,2|5,8,2|6,8,2|7,8,2");

            //italy flag
            registerMap(new MapStarsVO(80000, 110000, 145000), "0,0,11|2,0,11|4,0,11|6,0,11|8,0,11|0,3,11|2,3,1|3,3,1|4,3,7|5,3,7|6,3,3|7,3,3|2,4,1|3,4,1|4,4,7|5,4,7|6,4,3|7,4,3|2,5,1|3,5,1|4,5,7|5,5,7|6,5,3|7,5,3|0,6,11|2,6,1|3,6,1|4,6,7|5,6,7|6,6,3|7,6,3|2,7,1|3,7,1|4,7,7|5,7,7|6,7,3|7,7,3|2,8,1|3,8,1|4,8,7|5,8,7|6,8,3|7,8,3|0,9,11|2,9,1|3,9,1|4,9,7|5,9,7|6,9,3|7,9,3|2,10,7|2,11,7|2,12,7|2,13,7|2,14,7|2,15,7|2,16,7|2,17,7|2,18,7|2,19,7");

            //switzerland flag
            registerMap(new MapStarsVO(80000, 110000, 145000), "0,0,11|1,0,11|2,0,11|3,0,11|4,0,11|5,0,11|6,0,11|7,0,11|8,0,11|1,3,3|2,3,3|3,3,3|4,3,3|5,3,3|6,3,3|7,3,3|1,4,3|2,4,3|3,4,3|4,4,7|5,4,3|6,4,3|7,4,3|1,5,3|2,5,3|3,5,7|4,5,7|5,5,7|6,5,3|7,5,3|1,6,3|2,6,3|3,6,7|4,6,7|5,6,7|6,6,3|7,6,3|1,7,3|2,7,3|3,7,3|4,7,7|5,7,3|6,7,3|7,7,3|1,8,3|2,8,3|3,8,3|4,8,3|5,8,3|6,8,3|7,8,3");

            //denmark flag
            registerMap(new MapStarsVO(80000, 110000, 145000), "0,0,11|1,0,11|2,0,11|3,0,11|4,0,11|5,0,11|6,0,11|7,0,11|8,0,11|1,3,3|2,3,3|3,3,7|4,3,3|5,3,3|6,3,3|7,3,3|1,4,3|2,4,3|3,4,7|4,4,3|5,4,3|6,4,3|7,4,3|1,5,3|2,5,3|3,5,7|4,5,3|5,5,3|6,5,3|7,5,3|1,6,7|2,6,7|3,6,7|4,6,7|5,6,7|6,6,7|7,6,7|1,7,3|2,7,3|3,7,7|4,7,3|5,7,3|6,7,3|7,7,3|1,8,3|2,8,3|3,8,7|4,8,3|5,8,3|6,8,3|7,8,3|1,9,3|2,9,3|3,9,7|4,9,3|5,9,3|6,9,3|7,9,3");

            //france flag
            registerMap(new MapStarsVO(80000, 110000, 145000), "0,0,11|2,0,11|4,0,11|6,0,11|8,0,11|0,2,11|2,3,4|3,3,4|4,3,7|5,3,7|6,3,3|7,3,3|2,4,4|3,4,4|4,4,7|5,4,7|6,4,3|7,4,3|0,5,11|2,5,4|3,5,4|4,5,7|5,5,7|6,5,3|7,5,3|2,6,4|3,6,4|4,6,7|5,6,7|6,6,3|7,6,3|2,7,4|3,7,4|4,7,7|5,7,7|6,7,3|7,7,3|0,8,11|2,8,4|3,8,4|4,8,7|5,8,7|6,8,3|7,8,3|2,9,4|3,9,4|4,9,7|5,9,7|6,9,3|7,9,3|2,10,7|2,11,7|2,12,7|2,13,7|2,14,7|2,15,7|2,16,7|2,17,7|2,18,7|2,19,7");

            //belgium flag
            registerMap(new MapStarsVO(80000, 110000, 145000), "0,0,11|2,0,11|4,0,11|6,0,11|8,0,11|0,2,11|2,3,8|3,3,8|4,3,2|5,3,2|6,3,3|7,3,3|2,4,8|3,4,8|4,4,2|5,4,2|6,4,3|7,4,3|0,5,11|2,5,8|3,5,8|4,5,2|5,5,2|6,5,3|7,5,3|2,6,8|3,6,8|4,6,2|5,6,2|6,6,3|7,6,3|2,7,8|3,7,8|4,7,2|5,7,2|6,7,3|7,7,3|0,8,11|2,8,8|3,8,8|4,8,2|5,8,2|6,8,3|7,8,3|2,9,8|3,9,8|4,9,2|5,9,2|6,9,3|7,9,3|2,10,7|2,11,7|2,12,7|2,13,7|2,14,7|2,15,7|2,16,7|2,17,7|2,18,7|2,19,7");

            //sweden flag
            registerMap(new MapStarsVO(80000, 110000, 145000), "0,0,11|1,0,11|2,0,11|3,0,11|4,0,11|5,0,11|6,0,11|7,0,11|8,0,11|1,3,4|2,3,4|3,3,2|4,3,4|5,3,4|6,3,4|7,3,4|1,4,4|2,4,4|3,4,2|4,4,4|5,4,4|6,4,4|7,4,4|1,5,2|2,5,2|3,5,2|4,5,2|5,5,2|6,5,2|7,5,2|1,6,2|2,6,2|3,6,2|4,6,2|5,6,2|6,6,2|7,6,2|1,7,4|2,7,4|3,7,2|4,7,4|5,7,4|6,7,4|7,7,4|1,8,4|2,8,4|3,8,2|4,8,4|5,8,4|6,8,4|7,8,4|1,9,4|2,9,4|3,9,2|4,9,4|5,9,4|6,9,4|7,9,4");

			count = _presets.length;
		}

        /**
         * Avoiding indexes fuckup
         * @param starVO
         * @param presetData
         */
        private static function registerMap(starVO:MapStarsVO, presetData:String):void
        {
            _presets.push(presetData);
            _stars.push(starVO);
        }

		public static function getMapCode(id:int):String
		{
			return _presets[id];
		}

        public static function getMapStarsByPoints(mapID:int, points:int):int
        {
            return _stars[mapID].getStarsByPoints(points);
        }
    }
}
